server: # server 属性配置了 Promtail 作为 HTTP 服务器的行为
  http_listen_port: 9080 # HTTP 服务监听的端口
  grpc_listen_port: 0 # gRPC 服务监听的端口（0表示随机）

positions: # positions 属性配置了 Promtail 保存文件的位置，以便重启恢复日志读取。
  filename: /tmp/positions.yaml

clients: # clients 属性配置了 Promtail 如何连接到 Loki 服务
  - url: http://loki:3100/loki/api/v1/push # 这里的loki是容器名，如果不在同一个docker网络中换成Loki服务的真实主机地址

scrape_configs: # 配置日志抓取规则
- job_name: wssio # 用于在 Promtail 中识别该日志抓取规则名称
  static_configs: # 静态配置允许指定一个目标列表与标签集
  - targets:
      - localhost # 在当前节点中查找日志
    labels:
      job: wssio  # 在 Prometheus中，job 标签对于连接指标和日志很有用
      __path__: /var/log/*log # 抓取的日志路径
