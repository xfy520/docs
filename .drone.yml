kind: pipeline
type: docker
name: docs

workspace:
  base: /app
  path: drone/docs

clone:
  disable: true

steps:
  - name: clone
    image: alpine/git:v2.30.2
    pull: if-not-exists
    environment:
      DRONE_GIT_URL:
        from_secret: drone_git_url
      SSH_KEY:
        from_secret: ssh_key
    commands:
      - echo $DRONE_GIT_URL
      - mkdir -p /root/.ssh/
      - echo "$$SSH_KEY" > /root/.ssh/id_rsa
      - chmod -R 600 /root/.ssh/id_rsa
      - ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
      - git clone $DRONE_GIT_URL .

  - name: restore-cache # 加载缓存node_modules
    image: meltwater/drone-cache
    pull: if-not-exists
    settings:
      backend: "filesystem"
      restore: true
      cache_key: "volume"
      archive_format: "gzip"
      filesystem-cache-root: "/var/lib/drone/cache"
    mount:
      - ./node_modules
    volumes:
      - name: cache
        path: /tmp/cache

  - name: install # install
    image: node:16.9-alpine
    pull: if-not-exists
    commands:
      - rm -rf package-lock.json
      - yarn install

  - name: rebuild-cache # 更新node_modules缓存
    image: meltwater/drone-cache
    pull: if-not-exists
    settings:
      backend: "filesystem"
      rebuild: true
      cache_key: "volume"
      archive_format: "gzip"
      filesystem-cache-root: "/var/lib/drone/cache"
    mount:
      - ./node_modules
    volumes:
      - name: cache
        path: /tmp/cache

  - name: build
    image: node:16.9-alpine
    pull: if-not-exists
    commands:
      - CI=false yarn run build
      - ls

trigger:
  branch:
    - main
  event:
    - push
    - pull_request

---
kind: secret
name: drone_git_url
get:
  path: drone/data/docs
  name: drone_git_url
---
kind: secret
name: ssh_key
get:
  path: drone/data/docs
  name: ssh_key

volumes:
  - name: cache
    host:
      path: /var/lib/cache
